// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id        Int      @id @default(autoincrement())
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  email String   @unique
  hash  String
  roles String[]

  firstName String?
  lastName  String?

  habits   Habit[]
  journals Journal[]

  @@map("users")
}

model Habit {
  id        Int      @id @default(autoincrement())
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  title       String
  description String?
  startDate   DateTime
  endDate     DateTime

  userId Int
  user   User @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@map("habit")
}

model Journal {
  id        Int      @id @default(autoincrement())
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  entry String

  userID Int
  user   User @relation(fields: [userID], references: [id], onDelete: Cascade)

  @@map("journal")
}

model Daily {
  dayCreated String   @id
  createdAt  DateTime @default(now())
  prompt     String
  quote      Quote?
}

model Quote {
  createdOn  DateTime @default(now())
  dayCreated String   @id
  author     String
  quote      String

  daily Daily @relation(fields: [dayCreated], references: [dayCreated], onDelete: Cascade)
}
